/////////////////////////////////////////////////
//Working with Strings Part 1:
const airline = 'TAP Air Portugal';
const plane = 'A320';
console.log(plane[0]);
console.log(plane[1]);
console.log(plane[2]);
console.log('B737'[0]);

console.log(airline.length);
console.log('B737'.length);

console.log(airline.indexOf('r'));
console.log(airline.lastIndexOf('r'));
console.log(airline.indexOf('Portugal'));

console.log(airline.slice(4));
console.log(airline.slice(4, 7));

console.log(airline.slice(0, airline.indexOf(' ')));
console.log(airline.slice(airline.lastIndexOf(' ') + 1));

console.log(airline.slice(-2));
console.log(airline.slice(1, -1));

//Practical example:
const checkMiddleSeat= function(seat){
  const s= seat.slice(-1);
  if(s==='B'||s==='E'){
    console.log('You got the middle seat üòí');
  }else{
    console.log('You got lucky üéâ');
  }
}

checkMiddleSeat('11B');
checkMiddleSeat('23C');
checkMiddleSeat('2E');

//string is a primitive and primitives have no methods but our string has lots of them,
it is because when we call a method javascript automatically converts string into an object
and when the operations are done object is converted back to a regular string primitive.
console.log(new String('Jonas'));
console.log(typeof new String('Jonas'));

//and infact all string methods return primitives even if called on a string object.
console.log(typeof new String('Jonas').slice(1));

/////////////////////////////////////////////////
//Working with String Part-2:-
const airline = 'TAP Air Portugal';

console.log(airline.toLowerCase());
console.log(airline.toUpperCase());
console.log('jonas'.toUpperCase());

//Practicle example: to fix capitalization in a passenger name:
const passenger = 'jOnAs';

const passengerLower = passenger.toLowerCase();

const passengerCorrect =
  passengerLower[0].toUpperCase() + passengerLower.slice(1);

console.log(passengerCorrect);

//2. comparing emails:
const email = 'hello@jonas.io';
const loginEmail = '   Hello@Jonas.Io \n';

const lowerEmail = loginEmail.toLowerCase();
const trimmedEmail = lowerEmail.trim();

console.log(trimmedEmail);

//above process in one line:
const nomalizedEmail = loginEmail.toLowerCase().trim();
console.log(nomalizedEmail);
console.log(email === nomalizedEmail);
//this is a bit similar to what we did before with the maps set method,
loginEmail.toLowerCase() will return new string and on string we can call
string methods so we used trim further to normalize our email.

//also trimStart and trimEnd

//replacing example:
const priceGB = '299,97¬£';
const priceUS = priceGB.replace('¬£', '$').replace(',', '.');
console.log(priceUS);

//note: these methods make brand new strings it doesn't mutate the original one and these all methods are case sensitive.

//2. example:
const announcement =
  'All passengers come to the boarding door 23. Boarding door 23!';

//only replaces one:
console.log(announcement.replace('door', 'gate'));
//replaces all:
// console.log(announcement.replaceAll('door','gate'));
//with regualar expression,
console.log(announcement.replace(/door/g, 'gate'));

//Methods which return booleans:
const plane = 'Airbus A320neo';

console.log(plane.includes('A320'));
console.log(plane.includes('Boeing'));
console.log(plane.startsWith('Air'));
console.log(plane.startsWith('Aib'));

if (plane.startsWith('Airbus') && plane.endsWith('neo')) {
  console.log('Part of the new airbus family.');
}

//Practice excercise:
const checkBaggage = function (items) {
  //when we recieve input from a user we usally start putting everything to lowercase becase that's makes it a lot easier to compare it to something.
  const baggage = items.toLowerCase();
  if (baggage.includes('knife') || baggage.includes('gun')) {
    console.log('You are NOT allowed on board');
  } else {
    console.log('Welcome Abord!');
  }
};

checkBaggage('I have a laptop, some Food and a pocket Knife');
checkBaggage('Socks and camera');
checkBaggage('Got some snacks and a gun for protection');
////////////////////////////////////////////////

////////////////////////////////////////////////
//Working with Strings part 3:-
console.log('a+very+nice+string'.split('+'));
console.log('Jonas Schmedtmann'.split(' '));

//destructuring in split method:
const [firstName, lastName] = 'Jonas Schmedtmann'.split(' ');
console.log(firstName, lastName);

const newName = ['Mr.', firstName, lastName.toUpperCase()].join('---');
console.log(newName);

//example:
const capitalizeName = function (name) {
  const names = name.split(' ');
  const nameUpper = [];

  for (const n of names) {
    // nameUpper.push(n[0].toUpperCase()+ n.slice(1));
    nameUpper.push(n.replace(n[0], n[0].toUpperCase()));
  }
  console.log(nameUpper.join(' '));
};

capitalizeName('jessica ann smith davis');
capitalizeName('jonas schmedtmann');

//Padding: padding a string means to add a number of characters to the
string until the string has a certain desired length.
const message = 'Go to gate 23!';
console.log(message.padStart(25, '-').padEnd(30, '-'));
console.log('jonas'.padStart(25, '-').padEnd(30, '-'));

//credit card masking example:
const maskCrediCard= function(number){
  //convert number to string:
  //1st way:
  // const str= String(number);
  //2nd way:
  const str= number+ '';
  const last= str.slice(-4);
  console.log(last.padStart(str.length, '*')); 
}

maskCrediCard(4394530934579);
maskCrediCard('3429734959845343593489');
maskCrediCard(5348499956);

//Repeat method: airport repeating message example:
const message2= 'Bad weather... All Departures Delayed... ';
console.log(message2.repeat(5));

//2nd example: planes are waiting in line,
const planesInLine= function(n){
  console.log(`There are ${n} planes in line ${'‚úàÔ∏è'.repeat(n)}`);
}

planesInLine(5);
planesInLine(3);
planesInLine(12);
////////////////////////////////////////////////


